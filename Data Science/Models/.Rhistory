any(grepl("conjoint",installed.packages()))
library(conjoint)
getch()
getwd()
ls()
DataWith_1_Rating = read.csv("Conjoint/Data/Tire_Levels.csv")
View(DataWith_1_Rating)
str(DataWith_1_Rating)
str(DataWith_1_Rating)
View(DataWith_1_Rating)
View(DataWith_1_Rating)
View(DataWith_1_Rating)
DataWith_1_Rating = read.csv("Conjoint/Data/Tire_Levels.csv")
View(DataWith_1_Rating)
DataWith_1_Rating = read.csv("Conjoint/Data/Tire_Levels.csv", header = T, sep = ",")
View(DataWith_1_Rating)
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Levels.csv", header = T, sep = ",")
View(DataWith_1_Rating)
View(DataWith_1_Rating)
install.packages(c("curl", "DBI", "devtools", "dplyr", "evaluate", "forecast", "foreign", "gdata", "jsonlite", "Matrix", "plotly", "R6", "RcppArmadillo", "RGtk2", "rmarkdown", "tibble", "tseries", "XML"))
View(iris)
View(DataWith_1_Rating)
View(DataWith_1_Rating)
View(DataWith_1_Rating)
View(DataWith_1_Rating)
View(DataWith_1_Rating)
library(dplyr)
dplyr::do(iris)
getwd()
View(DataWith_1_Rating)
setwd("C:/Home/Work/Data Science/models-and-methods/Conjoint")
View(DataWith_1_Rating)
getwd()
setwd("C:/Home/Work/Data Science/models-and-methods")
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Levels.csv", header = T, sep = ",")
str(DataWith_1_Rating)
View(DataWith_1_Rating)
install.packages("googleVis")
library(googleVis)
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
gvt = gvisBarChart(DataWith_1_Rating)
plot(gvt)
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
setwd("C:/Home/Work/Data Science/models-and-methods")
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Levels.csv", header = T, sep = ",")
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Raw.csv", header = T, sep = ",")
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Raw.csv", header = T, sep = ",")
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
scdsad
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Raw.csv", header = T, sep = ",")
View(DataWith_1_Rating)
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
plot(gvt)
sapply(DataWith_1_Rating,summary())
sapply(DataWith_1_Rating, FUN = summary())
sapply(DataWith_1_Rating, FUN = "summary()")
sapply(DataWith_1_Rating, FUN = "summary")
plot(sapply(DataWith_1_Rating, FUN = "summary"))
sapply(DataWith_1_Rating, FUN = "summary")
head(DataWith_1_Rating)
f_Brand = factor(DataWith_1_Rating$Brand)
f_Brand
labels(f_Brand)
f_Brand[Sears]
f_Brand(Sears)
f_Brand = DataWith_1_Rating$Brand
f_Brand
f_Brand[c("Sears")]
f_Brand[c("Sears")]
setwd("C:/Home/Work/Data Science/models-and-methods")
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Raw.csv", header = T, sep = ",")
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
sapply(DataWith_1_Rating, FUN = "summary")
str(DataWith_1_Rating)
levels(DataWith_1_Rating$Brand)
labels(DataWith_1_Rating$Brand)
nlevels(DataWith_1_Rating$Brand
nlevels(DataWith_1_Rating$Brand
)
nlevels(DataWith_1_Rating$Brand)
f_brand = DataWith_1_Rating$Brand
rm(f_Brand)
f_brand[1]
f_brand[c("Sears")]
f_brand[levels(f_brand)="Sears"]
f_brand[levels(f_brand)=="Sears"]
f_brand[(f_brand)=="Sears"]
f_brand[(f_brand)=="Sears"] = 1
f_brand = as.character(DataWith_1_Rating$Brand)
f_brand
f_brand[f_brand=="Sears"]
f_brand[f_brand=="Sears"] = 1
f_brand
f_brand[f_brand=="Goodyear"] = 2
f_brand[f_brand=="Goodrich"] = 3
f_brand
f_brand = as.numeric(f_brand)
f_brand
f_brand = factor(f_brand, levels = c("Sears","Goodyear","Goodrich"))
f_brand
f_brand = as.character(DataWith_1_Rating$Brand)
f_brand[f_brand=="Sears"] = 1
f_brand[f_brand=="Goodyear"] = 2
f_brand[f_brand=="Goodrich"] = 3
f_brand = as.numeric(f_brand)
f_brand = factor(f_brand)
f_brand
levels(f_brand)
levels(f_brand) = c("Sears","Goodyear","Goodrich")
f_brand
str(DataWith_1_Rating)
f_tm = as.character(DataWith_1_Rating$Tread.Mile)
f_tm
f_tm = factor(f_tm)
f_tm
min(f_tm)
f_tm = factor(DataWith_1_Rating$Tread.Mile, levels = c(30000,40000,50000), ordered = TRUE)
min(f_tm)
str(DataWith_1_Rating)
f_price = factor(DataWith_1_Rating$Price, levels = c(50,60,70), ordered = TRUE)
rm(f_brand)
rm(f_price)
rm(f_tm)
DataWith_1_Rating$Tread.Mile = factor(DataWith_1_Rating$Tread.Mile, levels = c(30000,40000,50000), ordered = TRUE)
DataWith_1_Rating$Price = factor(DataWith_1_Rating$Price, levels = c(50,60,70), ordered = TRUE)
str(DataWith_1_Rating)
lR_data= lm(Response~Brand+Tread.Mile+Price+Sidewall, data = DataWith_1_Rating)
summary(lR_data)
lR_data_based_on_integer_factors= lm(Response~Brand+Tread.Mile+Price+Sidewall, data = DataWith_1_Rating)
rm(lR_data)
setwd("C:/Home/Work/Data Science/models-and-methods")
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Raw.csv", header = T, sep = ",")
gvt = gvisTable(DataWith_1_Rating)
str(DataWith_1_Rating$Tread.Mile)
str(DataWith_1_Rating$Tread.Mile)
f_s_TreadMile = as.character(DataWith_1_Rating$Tread.Mile)
f_s_TreadMile
f_s_TreadMile = factor(f_s_TreadMile)
f_s_TreadMile
levels(f_s_TreadMile)
class(levels(f_s_TreadMile))
levels(DataWith_1_Rating$Tread.Mile)
DataWith_1_Rating$Tread.Mile
DataWith_1_Rating$Tread.Mile = factor(DataWith_1_Rating$Tread.Mile, levels = c(30000,40000,50000), ordered = TRUE)
DataWith_1_Rating$Tread.Mile
levels(DataWith_1_Rating$Tread.Mile)
class(levels(DataWith_1_Rating$Tread.Mile))
f_s_TreadMile
f_s_TreadMile = factor(f_s_TreadMile, levels = c("30000","40000","50000"))
f_s_TreadMile
f_s_Price = as.character(DataWith_1_Rating$Price)
f_s_Price = factor(f_s_Price, levels = c("50","60","70"))
DataWith_1_Rating = cbind(DataWith_1_Rating,f_s_TreadMile,f_s_Price)
getwd()
setwd("C:/Home/Work/Data Science/models-and-methods")
DataWith_1_Rating = read.table("Conjoint/Data/Tire_Raw.csv", header = T, sep = ",")
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
sapply(DataWith_1_Rating, FUN = "summary")
str(DataWith_1_Rating)
str(DataWith_1_Rating$Tread.Mile)
f_s_TreadMile = as.character(DataWith_1_Rating$Tread.Mile)
f_s_TreadMile = factor(f_s_TreadMile, levels = c("30000","40000","50000"))
f_s_Price = as.character(DataWith_1_Rating$Price)
f_s_Price = factor(f_s_Price, levels = c("50","60","70"))
DataWith_1_Rating = cbind(DataWith_1_Rating,f_s_TreadMile,f_s_Price)
plot(gvt)
gvt = gvisTable(DataWith_1_Rating)
plot(gvt)
DataWith_1_Rating$Tread.Mile = factor(DataWith_1_Rating$Tread.Mile, levels = c(30000,40000,50000), ordered = TRUE)
DataWith_1_Rating$Price = factor(DataWith_1_Rating$Price, levels = c(50,60,70), ordered = TRUE)
str(DataWith_1_Rating)
lR_data_based_on_char_factors= lm(Response~Brand+f_s_TreadMile+f_s_Price+Sidewall, data = DataWith_1_Rating)
lR_data_based_on_integer_factors= lm(Response~Brand+Tread.Mile+Price+Sidewall, data = DataWith_1_Rating)
summary(c(lR_data_based_on_integer_factors,lR_data_based_on_char_factors))
summary(lR_data_based_on_char_factors)
summary(lR_data_based_on_integer_factors)
summary(lR_data_based_on_char_factors)
DataWith_1_Rating[,c("f_s_TreadMile")]
DataWith_1_Rating[,c("f_s_TreadMile","f_s_Price")]
caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
library(conjoint)
caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
Conjoint_Parameter_Estimators_IntFactors = caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
Conjoint_Parameter_Estimators_IntFactors = caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","f_s_TreadMile","f_s_Price","Sidewall")])
Conjoint_Parameter_Estimators_IntFactors = caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
Conjoint_Parameter_Estimators_ChrFactors = caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","f_s_TreadMile","f_s_Price","Sidewall")])
summary(Conjoint_Parameter_Estimators_ChrFactors)
Conjoint_Parameter_Estimators_ChrFactors
str(DataWith_1_Rating)
DataWith_1_Rating$Brand
DataWith_1_Rating$Tread.Mile
DataWith_1_Rating$Price
DataWith_1_Rating$Sidewall
utils = c("Goodrich","Goodyear","Sears","30000","40000","50000","50","60","70", "Black","White")
utils.df = as.data.frame(utils)
Conjoint_IntFactors = Conjoint(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")], z=utils.df)
Conjoint_IntFactors
Conjoint_IntFactors = Conjoint(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")], z=utils.df)
Conjoint_CharFactors = Conjoint(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","f_s_TreadMile","f_s_Price","Sidewall")], z=utils.df)
AttributeData = read.table("Conjoint/Data/Tire_Raw.csv", sep=",", header = T)
str(AttributeData)
AttributeData = DataWith_1_Rating
str(AttributeData)
rm(AttributeData$Response)
RatingData = read.table("Conjoint/Data/Tire_Multiple_Ratings.csv", sep = ",", header = T)
caTotalUtilities(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
IntFactorsTotalUtility = caTotalUtilities(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
plot(IntFactorsTotalUtility)
IntFactorsTotalUtility
RatingData = read.table("Conjoint/Data/Tire_Multiple_Ratings.csv", sep = ",", header = T)
RatingData = read.table("Conjoint/Data/Tire_Multiple_Ratings.csv", sep = ",", header = T)
RatingData[1,]
RatingData[1,2:5]
RatingData[1,2:19]
MultiY_ParamEst_IntFactors = caModel(RatingData[1,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
MultiY_ParamEst_IntFactors
Conjoint_IntFactors
Conjoint_IntFactors = Conjoint(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")], z=utils.df)
MultiY_ParamEst_IntFactors = caModel(RatingData[1,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
MultiY_ParamEst_IntFactors
MultiY_ParamEst_IntFactors = caModel(RatingData[,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
MultiY_ParamEst_IntFactors = caModel(RatingData[3,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
MultiY_ParamEst_IntFactors
MultiY_ParamEst_IntFactors = caModel(RatingData[5,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
MultiY_ParamEst_IntFactors
MultiY_ParamEst_IntFactors = caModel(RatingData[33,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
MultiY_ParamEst_IntFactors
MultiY_Conjoint = Conjoint(y=RatingData[,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")], z=utils.df)
caUtilities(y=RatingData[,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")], z=utils.df)
caMaxUtility(y=RatingData[,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")], z=utils.df)
caMaxUtility(y=RatingData[1,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")], z=utils.df)
caMaxUtility(y=RatingData[1,2:19],x = DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
?caMaxUtility
hsimp
data(herbata)
hsimp
hpref
caFactorialDesign(DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")])
?caFactorialDesign
caFactorialDesign(DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")],type = "orthogonal" )
caFactorialDesign(DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")],type = "orthogonal" , cards = 56)
fractionalFactorial = caFactorialDesign(DataWith_1_Rating[,c("Brand","Tread.Mile","Price","Sidewall")],type = "orthogonal" , cards = 56)
summary(fractionalFactorial)
