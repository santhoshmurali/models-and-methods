{
    "collab_server" : "",
    "contents" : "#Date 15-Jun-2017\n#This is a basic scriots using Tire data for learinng basics of Conjoint analysis.\n# I have already analysed COnjoint using Excel.\n# There I have used MLR for OLS (Ordinary Least Square) and Used SOlver to do LAD (Least Absolute Deviation)\n# Thanks to PKV sir.\n\n# Will start with 1 user rating\n# MLR with Levels\n# MLR with Effect Coding\n# (Constrain is MLR uses Least Square function to derive coefeciant)\nlibrary(dplyr)\n# Will use Level coding.\nlibrary(conjoint)\nlibrary(googleVis)\ngetwd()\nsetwd(\"C:/Home/Work/Data Science/models-and-methods\")\nDataWith_1_Rating = read.table(\"Conjoint/Data/Tire_Raw.csv\", header = T, sep = \",\")\ngvt = gvisTable(DataWith_1_Rating)\nplot(gvt)\n\n#In excel We used Dummy Effect Coding for pefroming Conjoint Analysis. \n# Dummy effect coding converts the categorical data to a integer data in the combination of 1,0 and -1,in an orthoganal way.\n# Here, we will convert the categorical variable to Factors and run conjoint.\n\nsapply(DataWith_1_Rating, FUN = \"summary\")\nstr(DataWith_1_Rating)\n#Converting The Integers to String Factors\nstr(DataWith_1_Rating$Tread.Mile)\nf_s_TreadMile = as.character(DataWith_1_Rating$Tread.Mile)\nf_s_TreadMile = factor(f_s_TreadMile, levels = c(\"30000\",\"40000\",\"50000\"))\nf_s_Price = as.character(DataWith_1_Rating$Price)\nf_s_Price = factor(f_s_Price, levels = c(\"50\",\"60\",\"70\"))\nDataWith_1_Rating = cbind(DataWith_1_Rating,f_s_TreadMile,f_s_Price)\ngvt = gvisTable(DataWith_1_Rating)\nplot(gvt)\n\n#Converting The Integers to Numeric Factors\nDataWith_1_Rating$Tread.Mile = factor(DataWith_1_Rating$Tread.Mile, levels = c(30000,40000,50000), ordered = TRUE)\nDataWith_1_Rating$Price = factor(DataWith_1_Rating$Price, levels = c(50,60,70), ordered = TRUE)\nstr(DataWith_1_Rating)\n#executing above we will knw that every variable is now converted to a factour and we can run lm\n\n#Running linear regression to get he Attribute Siginicance\nlR_data_based_on_integer_factors= lm(Response~Brand+Tread.Mile+Price+Sidewall, data = DataWith_1_Rating)\nlR_data_based_on_char_factors= lm(Response~Brand+f_s_TreadMile+f_s_Price+Sidewall, data = DataWith_1_Rating)\n\nsummary(lR_data_based_on_integer_factors)\nsummary(lR_data_based_on_char_factors)\n\n\n## Let us apply Conjoint and study the Significance\nConjoint_Parameter_Estimators_IntFactors = caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c(\"Brand\",\"Tread.Mile\",\"Price\",\"Sidewall\")])\nConjoint_Parameter_Estimators_ChrFactors = caModel(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c(\"Brand\",\"f_s_TreadMile\",\"f_s_Price\",\"Sidewall\")])\nConjoint_Parameter_Estimators_ChrFactors\n\n#Now let us run the conjoint\nutils = c(\"Goodrich\",\"Goodyear\",\"Sears\",\"30000\",\"40000\",\"50000\",\"50\",\"60\",\"70\", \"Black\",\"White\")\nutils.df = as.data.frame(utils)\nConjoint_IntFactors = Conjoint(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c(\"Brand\",\"Tread.Mile\",\"Price\",\"Sidewall\")], z=utils.df)\nConjoint_CharFactors = Conjoint(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c(\"Brand\",\"f_s_TreadMile\",\"f_s_Price\",\"Sidewall\")], z=utils.df)\nIntFactorsTotalUtility = caTotalUtilities(y = DataWith_1_Rating$Response, x = DataWith_1_Rating[,c(\"Brand\",\"Tread.Mile\",\"Price\",\"Sidewall\")])\nIntFactorsTotalUtility\n#Based on the type of the data we choose when runnig the Conjoint, Results differ. But, If int is kept as integers, results are accurate with Manual conjoint\n\n#Let now we are running the conjoint for only one user rating. It is assumed that these ratings are average of all the rating.\n#Now let us take a real life scenario of multiple user rating and measure the relative attrinute importance and relatrive utility imprtance\nAttributeData = DataWith_1_Rating\nRatingData = read.table(\"Conjoint/Data/Tire_Multiple_Ratings.csv\", sep = \",\", header = T)\n#Let us run the Estimators\nMultiY_ParamEst_IntFactors = caModel(RatingData[33,2:19],x = DataWith_1_Rating[,c(\"Brand\",\"Tread.Mile\",\"Price\",\"Sidewall\")])\nMultiY_ParamEst_IntFactors\n\n#let us run the Conjoint Study\nMultiY_Conjoint = Conjoint(y=RatingData[,2:19],x = DataWith_1_Rating[,c(\"Brand\",\"Tread.Mile\",\"Price\",\"Sidewall\")], z=utils.df)\n",
    "created" : 1497541119614.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2124820356",
    "id" : "5B4A263D",
    "lastKnownWriteTime" : 1498761225,
    "last_content_update" : 1498761225970,
    "path" : "C:/Home/Work/Data Science/models-and-methods/Conjoint/Conjoint_Basics.R",
    "project_path" : "Conjoint/Conjoint_Basics.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}