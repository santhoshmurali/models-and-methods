{
    "collab_server" : "",
    "contents" : "# Logistic Regression on CellPone - Group Assignment\n# Ref : https://www.r-bloggers.com/how-to-perform-a-logistic-regression-in-r/\n# Ref : https://www.analyticsvidhya.com/blog/2015/11/beginners-guide-on-logistic-regression-in-r/\n# Ref : https://en.wikipedia.org/wiki/Generalized_linear_model#Link_function\n# ref : http://www.statmethods.net/advgraphs/correlograms.html\n\n#Required Libraries\nlibrary(googleVis)\nlibrary(outliers)\nlibrary(corrgram)\nlibrary(lmtest)\nlibrary(pscl)\nlibrary(AICcmodavg)\nlibrary(ROCR)\n\n\n\n\ngetwd()\nsetwd(\"C:/Home/Work/Data Science/models-and-methods\")\nmydata = read.table(file = \"Logit/Data/CellPhone.csv\", header = T, sep = \",\")\nnames(mydata)[1] = \"Churn\"\nsapply(mydata, function(x) summary(x))\nscaledMyData = scale(mydata[,-1])\n\n#Splitting the data as 70% Trainng and 30% Testing\ntraining_index_sample = sample(nrow(mydata), nrow(mydata)*.7)\nmydata_train = mydata[training_index_sample,]\nmydata_test  = mydata[-training_index_sample,]\n\n#Outliers\n\noutlier(mydata)\n#Let us find the corellation between independant variables\ncorraltedData = as.data.frame(cor(mydata[,-1]))\nplot(gvisTable(corraltedData))\nwrite.csv(corraltedData,file = \"Logit/Data/corData.csv\", row.names = TRUE, col.names = TRUE)\n#Visual Representation of Correlation\ninstall.packages(\"corrgram\")\n\ncorrgram(mydata[,-1], order = TRUE, lower.panel = panel.pie, upper.panel = panel.pie, text.panel = panel.txt, main=\"Correlation Matirx\", diag.panel = panel.minmax)\n#Highly correlated variables\n# Data Plan X Data Usage\n# Data Plan X Monthly Charge\n# Monthly Charge X DayMins\n# Monthly Charge X OverageMins\n\n#Logistic Regression based on additive effect\nlogitModel = glm(Churn ~ .,data = mydata_train, family = binomial)\nsummary(logitModel)\nanova(logitModel)\n#Testing Goodness of fit \n\nlrtest(logitModel)\n\npR2(logitModel)\nconfint(logitModel)\n\n logitModelTest = predict(logitModel, newdata = mydata_test, type = \"response\")\ntable(cut(logitModelTest,5))\nChurnPredicted = ifelse(logitModelTest>0.5,1,0)\nmydata_test$PredictedChurn = ChurnPredicted\n\n#Perfromnce of Logistic regression model\n# AIC\n#1. AIC (Akaike Information Criteria) – \n#The analogous metric of adjusted R² in logistic regression is AIC. AIC is the measure of \n#fit which penalizes model for the number of model coefficients. Therefore, we always \n#prefer model with minimum AIC value.\nifelse(any(grepl(\"AICcmodavg\", installed.packages())),print(\"AICcmodavg Installed\"),install.packages(\"AICcmodavg\"))\nAICc(logitModel, k=2)\n\n#Confusion Matrix\ntable(mydata_test$Churn, mydata_test$PredictedChurn)\n\n#ROC Curve: Receiver Operating Characteristic(ROC) \ninstall.packages(\"ROCR\")\n\nROCRPred = ROCR::prediction(mydata_test$PredictedChurn, mydata_test$Churn)\nROCRPerf = ROCR::performance(ROCRPred,\"tpr\",\"fpr\")\nplot(ROCRPerf,colorize = T)\n\nlibrary(ggplot2)\nnames(mydata_train)\nggplot(mydata_train, aes(AccountWeeks+ContractRenewal+DataPlan+DataUsage+CustServCalls+DayMins+DayCalls+MonthlyCharge+OverageFee+RoamMins,Churn)) + geom_point() + stat_smooth(method=\"glm\", family=\"binomial\", se=FALSE)\n\n\n\n#Logistic Regression based on interactive effect\nlogitModelInteraction = glm(Churn~AccountWeeks+ContractRenewal+DataPlan+DataUsage+CustServCalls+DayMins+DayCalls+MonthlyCharge+OverageFee+RoamMins+DataPlan*DataUsage+DataPlan*MonthlyCharge+MonthlyCharge*DayMins+MonthlyCharge*OverageFee,                                data = mydata_train, family = binomial)\nsummary(logitModelInteraction)\nanova(logitModelInteraction)\nlrtest(logitModelInteraction)\npR2(logitModelInteraction)\n\n\nlogitModelInteractionTest = predict(logitModelInteraction,newdata = mydata_test, type = \"response\")\nChurnPredictedIntEf = ifelse(logitModelInteractionTest>.5,1,0)\nmydata_test$PredictedChurnIntEf = ChurnPredictedIntEf\ntable(mydata_test$Churn, mydata_test$PredictedChurnIntEf)\ntable(mydata_test$Churn, mydata_test$PredictedChurn)\n\nnames(mydata)\n# Data Plan X Data Usage\n# Data Plan X Monthly Charge\n# Monthly Charge X DayMins\n# Monthly Charge X OverageMins\n\n\n",
    "created" : 1498887311628.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3824909450",
    "id" : "ABABA936",
    "lastKnownWriteTime" : 1498965452,
    "last_content_update" : 1498965452813,
    "path" : "C:/Home/Work/Data Science/models-and-methods/Logit/logit.R",
    "project_path" : "Logit/logit.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}